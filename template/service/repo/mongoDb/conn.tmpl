package mongoDb

import (
	"context"
	"fmt"
	"log"
	"os"
	"time"

	"go.mongodb.org/mongo-driver/mongo"
	"gitlab.com/qasir/web/project/qasircore.git/database/mongo"
)

var DB *mongo.Database

// InitCon handler connection for mongodb
func OpenDB() {
	urlConnection := devConnectionScript()
	if fmt.Sprint(os.Getenv("APP_ENV")) == "production" || fmt.Sprint(os.Getenv("APP_ENV")) == "prod" {
		urlConnection = prodConnectionScript()
	}
	DB = mongo.OpenDB(urlConnection,fmt.Sprint(os.Getenv("DB_MONGO_DATABASE")))
}

func devConnectionScript() string {
	hostName := fmt.Sprint(os.Getenv("DB_MONGO_HOST")) + ":" + fmt.Sprint(os.Getenv("DB_MONGO_PORT"))

	fmt.Printf("⇨ Connect MongoDB to Server %s ... \n", hostName)

	usernameAndPassword := ""
	if fmt.Sprint(os.Getenv("DB_MONGO_USER")) != "" {
		usernameAndPassword = fmt.Sprint(os.Getenv("DB_MONGO_USER")) + ":" + fmt.Sprint(os.Getenv("DB_MONGO_PASSWORD")) + "@"
	}
	// auth source database for mongodb connection, if empty it would be default as `admin`
	authSource := ""
	if fmt.Sprint(os.Getenv("DB_MONGO_AUTH")) != "" {
		authSource = "/?authSource=" + fmt.Sprint(os.Getenv("DB_MONGO_AUTH"))
	}
	return fmt.Sprint(os.Getenv("DB_MONGO_DRIVER")) + "://" + usernameAndPassword + hostName + authSource

}

func prodConnectionScript() string {
	hostName := fmt.Sprint(os.Getenv("DB_MONGO_HOST")) + "/" + fmt.Sprint(os.Getenv("DB_MONGO_DATABASE"))

	fmt.Printf("⇨ Connect MongoDB to Server %s ... \n", hostName)

	usernameAndPassword := ""
	if fmt.Sprint(os.Getenv("DB_MONGO_USER")) != "" {
		usernameAndPassword = fmt.Sprint(os.Getenv("DB_MONGO_USER")) + ":" + fmt.Sprint(os.Getenv("DB_MONGO_PASSWORD")) + "@"
	}

	return fmt.Sprint(os.Getenv("DB_MONGO_DRIVER")) + "+srv://" + usernameAndPassword + hostName
}
