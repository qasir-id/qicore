package grpc

import (
	"log"
	"net"
	"os"

	"{{.ProjectName}}/transport/grpc/proto/contract"
	qGrpc "gitlab.com/qasir/web/project/qasircore.git/grpc"
	"google.golang.org/grpc/reflection"
)

func Run() {
	lis, err := net.Listen("tcp", ":"+os.Getenv("GRPC_PORT"))
	if err != nil {
		log.Fatalf("failed to listen: %v", err)
	} else {
		log.Println("Connect GRPC to port " + os.Getenv("GRPC_PORT"))
	}
	log.Println("Connect To Register Product Server")
	s := qGrpc.NewServer()
	contract.RegisterContractServiceServer(s, NewContractServer())
	// Register reflection service on gRPC server.
	reflection.Register(s)
	if err := s.Serve(lis); err != nil {
		log.Fatalf("failed to serve: %v", err)
	}

}
